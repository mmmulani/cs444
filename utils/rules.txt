Type:
        PrimitiveType
        ReferenceType


PrimitiveType:
              NumericType
              boolean


NumericType:
              IntegralType
              FloatingPointType


IntegralType:
              byte
        short 
        int 
        long 
        char


FloatingPointType:
              float
        double


ReferenceType:
        ClassOrInterfaceType
        ArrayType


ClassOrInterfaceType:
        ClassType
        InterfaceType


ClassType:
        TypeName


InterfaceType:
        TypeName


ArrayType:
        Type [ ]


PackageName:
        Identifier
        PackageName . Identifier


TypeName:
        Identifier
        PackageOrTypeName . Identifier


ExpressionName:
        Identifier
        AmbiguousName . Identifier


MethodName:
        Identifier
        AmbiguousName . Identifier


PackageOrTypeName:
        Identifier
        PackageOrTypeName . Identifier


AmbiguousName:
        Identifier
        AmbiguousName . Identifier


CompilationUnit:
              PackageDeclaration_OPT ImportDeclarations_OPT TypeDeclarations_OPT


ImportDeclarations:
              ImportDeclaration
              ImportDeclarations ImportDeclaration


TypeDeclarations:
              TypeDeclaration
              TypeDeclarations TypeDeclaration


PackageDeclaration:
              package PackageName ;


ImportDeclaration:
        SingleTypeImportDeclaration
        TypeImportOnDemandDeclaration


SingleTypeImportDeclaration:
        import TypeName ;


TypeImportOnDemandDeclaration:
              import PackageOrTypeName . * ;


TypeDeclaration:
              ClassDeclaration
              InterfaceDeclaration
              ;


ClassDeclaration:
        ClassModifiers_OPT class Identifier Super_OPT Interfaces_OPT ClassBody


ClassModifiers:
        ClassModifier
        ClassModifiers ClassModifier


ClassModifier:
        public 
        protected 
        private
        abstract 
        static 
        final 
        strictfp


Super:
        extends ClassType


ClassType:
        TypeName


Interfaces:
        implements InterfaceTypeList


InterfaceTypeList:
        InterfaceType
        InterfaceTypeList , InterfaceType


ClassBody:
        { ClassBodyDeclarations_OPT }


ClassBodyDeclarations:
        ClassBodyDeclaration
        ClassBodyDeclarations ClassBodyDeclaration


ClassBodyDeclaration:
        ClassMemberDeclaration
        InstanceInitializer
        StaticInitializer
        ConstructorDeclaration


ClassMemberDeclaration:
        FieldDeclaration
        MethodDeclaration
        ClassDeclaration                                                
        InterfaceDeclaration
        ;


FieldDeclaration:
        FieldModifiers_OPT Type VariableDeclarators ;


VariableDeclarators:
        VariableDeclarator
        VariableDeclarators , VariableDeclarator


VariableDeclarator:
        VariableDeclaratorId
        VariableDeclaratorId = VariableInitializer


VariableDeclaratorId:
        Identifier
        VariableDeclaratorId [ ]


VariableInitializer:
        Expression
        ArrayInitializer


FieldModifiers:
        FieldModifier
        FieldModifiers FieldModifier


FieldModifier:
        public
        protected
        private
        static
        final
        transient
        volatile


MethodDeclaration:
              MethodHeader MethodBody


MethodHeader:
              MethodModifiers_OPT ResultType MethodDeclarator Throws_OPT


ResultType:
              Type
              void


MethodDeclarator:
              Identifer ( FormalParameterList_OPT )


MethodDeclarator:
        MethodDeclarator [ ]


FormalParameterList:
              FormalParameter
              FormalParameterList , FormalParameter


FormalParameter:
              final_OPT Type VariableDeclaratorId




MethodModifiers:
        MethodModifier
        MethodModifiers MethodModifier


MethodModifier:
        public
        protected
        private
        abstract
        static
        final
        synchronized
        native
        strictfp


Throws:
              throws ClassTypeList


ClassTypeList:
              ClassType
              ClassTypeList , ClassType


MethodBody:
        Block 
        ;


InstanceInitializer:
        Block


StaticInitializer:
        static Block


ConstructorDeclaration:
              ConstructorModifiers_OPT ConstructorDeclarator Throws_OPT ConstructorBody


ConstructorDeclarator:
              SimpleTypeName ( FormalParameterList_OPT )


ConstructorModifiers:
        ConstructorModifier
        ConstructorModifiers ConstructorModifier


ConstructorModifier:
        public
        protected
        private


ConstructorBody:
        { ExplicitConstructorInvocation_OPT BlockStatements_OPT }


ExplicitConstructorInvocation:
              this ( ArgumentList_OPT ) ;
              super ( ArgumentList_OPT ) ;
              Primary.super ( ArgumentList_OPT ) ; 


InterfaceDeclaration:
        InterfaceModifiers_OPT interface Identifier ExtendsInterfaces_OPT InterfaceBody


InterfaceModifiers:
        InterfaceModifier
        InterfaceModifiers InterfaceModifier


InterfaceModifier: one of
        public
        protected
        private
        abstract
        static
        strictfp


ExtendsInterfaces:
        extends InterfaceType
        ExtendsInterfaces , InterfaceType


InterfaceType:
        TypeName


InterfaceBody:
        { InterfaceMemberDeclarations_OPT }


InterfaceMemberDeclarations:
        InterfaceMemberDeclaration
        InterfaceMemberDeclarations InterfaceMemberDeclaration


InterfaceMemberDeclaration:
        ConstantDeclaration
        AbstractMethodDeclaration
        ClassDeclaration
        InterfaceDeclaration
        ;


ConstantDeclaration:
        ConstantModifiers_OPT Type VariableDeclarators


ConstantModifiers: 
        ConstantModifier
        ConstantModifiers ConstantModifer 


ConstantModifier:
        public
        static
        final


AbstractMethodDeclaration:
        AbstractMethodModifiers_OPT ResultType MethodDeclarator Throws_OPT ;


AbstractMethodModifiers:
        AbstractMethodModifier
        AbstractMethodModifiers AbstractMethodModifier


AbstractMethodModifier:
        public
        abstract


Block:
        { BlockStatements_OPT }


BlockStatements:
        BlockStatement
        BlockStatements BlockStatement


BlockStatement:
        LocalVariableDeclarationStatement
        ClassDeclaration
        Statement


LocalVariableDeclarationStatement:
        LocalVariableDeclaration ;


LocalVariableDeclaration:
        final_OPT Type VariableDeclarators


VariableDeclarators:
        VariableDeclarator
        VariableDeclarators , VariableDeclarator


VariableDeclarator:
        VariableDeclaratorId
        VariableDeclaratorId = VariableInitializer


VariableDeclaratorId:
        Identifier
        VariableDeclaratorId [ ]


VariableInitializer:
        Expression
        ArrayInitializer


Statement:
        StatementWithoutTrailingSubstatement
        LabeledStatement
        IfThenStatement
        IfThenElseStatement
        WhileStatement
        ForStatement


StatementWithoutTrailingSubstatement:
        Block
        EmptyStatement
        ExpressionStatement
        SwitchStatement
        DoStatement
        BreakStatement
        ContinueStatement
        ReturnStatement
        SynchronizedStatement
        ThrowStatement
        TryStatement


StatementNoShortIf:
        StatementWithoutTrailingSubstatement
        LabeledStatementNoShortIf
        IfThenElseStatementNoShortIf
        WhileStatementNoShortIf
        ForStatementNoShortIf


IfThenStatement:
        if ( Expression ) Statement


IfThenElseStatement:
        if ( Expression ) StatementNoShortIf else Statement


IfThenElseStatementNoShortIf:
        if ( Expression ) StatementNoShortIf else StatementNoShortIf


EmptyStatement:
        ;


LabeledStatement:
        Identifier : Statement


LabeledStatementNoShortIf:
        Identifier : StatementNoShortIf


ExpressionStatement:
        StatementExpression ;


StatementExpression:
        Assignment
        PreIncrementExpression
        PreDecrementExpression
        PostIncrementExpression
        PostDecrementExpression
        MethodInvocation
        ClassInstanceCreationExpression


SwitchStatement:
        switch ( Expression ) SwitchBlock


SwitchBlock:
        { SwitchBlockStatementGroups_OPT SwitchLabels_OPT }


SwitchBlockStatementGroups:
        SwitchBlockStatementGroup
        SwitchBlockStatementGroups SwitchBlockStatementGroup


SwitchBlockStatementGroup:
        SwitchLabels BlockStatements


SwitchLabels:
        SwitchLabel
        SwitchLabels SwitchLabel


SwitchLabel:
        case ConstantExpression :
        default :


WhileStatement:
        while ( Expression ) Statement


WhileStatementNoShortIf:
        while ( Expression ) StatementNoShortIf


DoStatement:
        do Statement while ( Expression ) ;


ForStatement:
        for ( ForInit_OPT ; Expression_OPT ; ForUpdate_OPT ) Statement


ForStatementNoShortIf:
        for ( ForInit_OPT ; Expression_OPT ; ForUpdate_OPT ) StatementNoShortIf


ForInit:
        StatementExpressionList
        LocalVariableDeclaration


ForUpdate:
        StatementExpressionList


StatementExpressionList:
        StatementExpression
        StatementExpressionList , StatementExpression


BreakStatement:
        break Identifier_OPT ;


ContinueStatement:
        continue Identifier_OPT ;


ReturnStatement:
        return Expression_OPT ;


ThrowStatement:
        throw Expression ;


SynchronizedStatement:
        synchronized ( Expression ) Block


TryStatement:
        try Block Catches
        try Block Catches_OPT Finally


Catches:
        CatchClause
        Catches CatchClause


CatchClause:
        catch ( FormalParameter ) Block


Finally:
        finally Block


FormalParameter:
        final_OPT Type VariableDeclaratorId


VariableDeclaratorId:
        Identifier
        VariableDeclaratorId [ ]


ArrayInitializer:
        { VariableInitializers_OPT ,_OPT }


VariableInitializers:
        VariableInitializer
        VariableInitializers , VariableInitializer


VariableInitializer:
        Expression
        ArrayInitializer


Primary:[a]
        PrimaryNoNewArray
        ArrayCreationExpression


PrimaryNoNewArray:
        Literal
        this
        ( Expression )
        ClassInstanceCreationExpression
        FieldAccess
        MethodInvocation
        ArrayAccess


Literal:
        IntegerLiteral
        FloatingPointLiteral
        BooleanLiteral
        CharacterLiteral
        StringLiteral
        NullLiteral


ClassInstanceCreationExpression:
        new ClassType ( ArgumentList_OPT )


ArgumentList:
        Expression
        ArgumentList , Expression


ArrayCreationExpression:
        new PrimitiveType DimExprs Dimsopt
        new TypeName DimExprs Dimsopt


DimExprs:
        DimExpr
        DimExprs DimExpr


DimExpr:
        [ Expression ]


Dims:
        [ ]
        Dims [ ]


FieldAccess:
        Primary . Identifier
        super . Identifier


MethodInvocation:
        MethodName ( ArgumentList_OPT )
        Primary . Identifier ( ArgumentList_OPT )
        super . Identifier ( ArgumentList_OPT )


ArrayAccess:
        ExpressionName [ Expression ]
        PrimaryNoNewArray [ Expression ]


PostfixExpression:
        Primary
        ExpressionName
        PostIncrementExpression
        PostDecrementExpression


PostIncrementExpression:
        PostfixExpression ++


PostDecrementExpression:
        PostfixExpression --


UnaryExpression:
        PreIncrementExpression
        PreDecrementExpression
        + UnaryExpression
        - UnaryExpression
        UnaryExpressionNotPlusMinus


PreIncrementExpression:
        ++ UnaryExpression


PreDecrementExpression:
        -- UnaryExpression


UnaryExpressionNotPlusMinus:
        PostfixExpression
        ~ UnaryExpression
        ! UnaryExpression
        CastExpression


CastExpression:
        ( PrimitiveType Dims_OPT ) UnaryExpression
        ( ReferenceType ) UnaryExpressionNotPlusMinus


MultiplicativeExpression:
        UnaryExpression
        MultiplicativeExpression * UnaryExpression
        MultiplicativeExpression / UnaryExpression
        MultiplicativeExpression % UnaryExpression


AdditiveExpression:
        MultiplicativeExpression
        AdditiveExpression + MultiplicativeExpression
        AdditiveExpression - MultiplicativeExpression


ShiftExpression:
        AdditiveExpression
        ShiftExpression << AdditiveExpression
        ShiftExpression >> AdditiveExpression
        ShiftExpression >>> AdditiveExpression


RelationalExpression:
        ShiftExpression
        RelationalExpression < ShiftExpression
        RelationalExpression > ShiftExpression
        RelationalExpression <= ShiftExpression
        RelationalExpression >= ShiftExpression
        RelationalExpression instanceof ReferenceType


EqualityExpression:
        RelationalExpression
        EqualityExpression == RelationalExpression
        EqualityExpression != RelationalExpression


AndExpression:
        EqualityExpression
        AndExpression & EqualityExpression


ExclusiveOrExpression:
        AndExpression
        ExclusiveOrExpression ^ AndExpression


InclusiveOrExpression:
        ExclusiveOrExpression
        InclusiveOrExpression | ExclusiveOrExpression


ConditionalAndExpression:
        InclusiveOrExpression
        ConditionalAndExpression && InclusiveOrExpression


ConditionalOrExpression:
        ConditionalAndExpression
        ConditionalOrExpression || ConditionalAndExpression


ConditionalExpression:
        ConditionalOrExpression
        ConditionalOrExpression ? Expression : ConditionalExpression


AssignmentExpression:
        ConditionalExpression
        Assignment


Assignment:
        LeftHandSide AssignmentOperator AssignmentExpression


LeftHandSide:
        ExpressionName
        FieldAccess
        ArrayAccess


AssignmentOperator:
=
*=
/=
%=
+=
-=
<<=
>>=
>>>=
&=
^=
|=


Expression:
        AssignmentExpression


ConstantExpression:
        Expression
